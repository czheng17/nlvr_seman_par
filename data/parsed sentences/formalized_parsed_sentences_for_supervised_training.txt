### this file contains the pairings of 'formalized' sentences and their manually annotated respective
### logical form(s).forms without ~ sign in the begginning are ignores.
### These are used to generate trainning pairs of (regular english) sentences and their logical forms
### by replacing pattern tokens like 'T_LOC' with words like 'yellow'.
### the numbers after each sentence pattern represents the number of sentences in the CNLVR training data set
### that have that pattern.


@ there are T_INT T_COLOR item $   101
~ equal_int T_INT count filter ALL_ITEMS lambda_x_: is_T_COLOR x

! equal_int T_INT count filter_color ALL_ITEMS color.T_COLOR

@ there is T_ONE tower with a T_COLOR item at the T_LOC  $  60
~ exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
~ exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
~ exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
! exist filter ALL_BOXES lambda_x_: exist intersection filter_color x color.T_COLOR filter x lambda_y_: is_T_LOC y

@ there is T_QUANTITY_COMPARE T_ONE tower with a T_COLOR item at the T_LOC $   53
~ T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
~ T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
~ T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
! T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: exist filter filter_color x color.T_COLOR lambda_y_: is_T_LOC y


@ there is T_ONE T_COLOR T_SHAPE  $  52
~ exist filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x
~ exist filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_T_SHAPE y
~ exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_T_COLOR y
~ exist filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x
~ exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_T_COLOR y
! exist intersection filter_color ALL_ITEMS color.T_COLOR filter_shape ALL_ITEMS shape.T_SHAPE

@ there is a T_COLOR item as the T_LOC of a tower with T_INT item  $  51
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
! exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x exist filter_color filter x lambda_y_: is_T_LOC y color.T_COLOR

@ there is a T_COLOR_1 item on a T_COLOR_2 item $   47
~ exist filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_2 x lambda_y_: is_T_COLOR_1 y
! exist filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_1 x lambda_y_: is_T_COLOR_2 y
! exist filter_color get_above filter_color ALL_ITEMS color.T_COLOR_2 color.T_COLOR_1

@ there is a T_COLOR item as the T_LOC of a tower with T_QUANTITY_COMPARE T_INT item $   44
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE T_INT count x exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE T_INT count x exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
~ exist filter filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x lambda_y_: exist filter y lambda_z_: AND is_T_LOC z is_T_COLOR z
~ exist filter filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x lambda_y_: exist filter filter y lambda_z_: is_T_LOC z lambda_w_: is_T_COLOR w
! exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE T_INT count x exist filter_color filter x lambda_y_: is_T_LOC y color.T_COLOR

@ there is a T_COLOR T_SHAPE closely touch the T_LOC of a box $  41
~ exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC
~ exist filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.T_LOC
! exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC
! exist filter_shape filter_color filter ALL_ITEMS lambda_x_: is_touching_wall x Side.T_LOC color.T_COLOR shape.T_SHAPE

@ there are T_INT T_COLOR T_SHAPE $   36
~ equal_int T_INT count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x
~ equal_int T_INT count filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_T_COLOR y
! equal_int T_INT count filter_shape filter_color ALL_ITEMS color.T_COLOR shape.T_SHAPE

@ T_ONE of the box contain T_QUANTITY_COMPARE T_INT item  $  31
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE  T_INT count x
~ le 1 count filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
! exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE  T_INT count x

@ there are T_INT tower with a T_COLOR item at the T_LOC $   30
~ le T_INT count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
~ le T_INT count filter ALL_BOXES lambda_x_: exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
! le T_INT count filter ALL_BOXES lambda_x_: exist filter_color filter x lambda_y_: is_T_LOC y color.T_COLOR

@ there is a box with a T_COLOR_1 T_SHAPE_1 and a T_COLOR_2 T_SHAPE_2  $  27
~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y exist filter x lambda_z_: AND is_T_COLOR_2 z is_T_SHAPE_2 z
~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y exist filter x lambda_z_: AND is_T_COLOR_2 z is_T_SHAPE_2 z

@ there is a T_COLOR T_SHAPE touch the T_LOC  $  25
~ exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC
~ exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC

@ there is a T_COLOR T_SHAPE closely touch right edge of a box  $  24
~  exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.RIGHT
~  exist filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.RIGHT

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR T_SHAPE touch the edge  $  23
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.ANY

@ there is a box with T_INT item  $  22
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x
~ le 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count x

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR item as the T_LOC of a tower $   21
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_LOC x
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: is_T_LOC x lambda_y_: is_T_COLOR y

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR T_SHAPE not touch a edge $   20
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: NOT is_touching_wall y Side.ANY

@ there is a box with only T_COLOR_1 and T_COLOR_2 item $   20
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y

@ there is a box with only T_ONE item  $  20
~ exist filter ALL_BOXES lambda_x_: equal_int 1 count x

@ there is a T_COLOR item as the T_LOC of a tower  $  19
~ exist filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_LOC x
~ exist filter ALL_ITEMS lambda_x_: AND is_T_LOC x is_T_COLOR x

@ T_ONE of the box have T_QUANTITY_COMPARE T_INT item  $  19
~ le 1 count filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
~ equal_int 1 count filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x

@ there is a tower with a T_COLOR_1 item on a T_COLOR_2 item  $  19
~ exist filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_2 x lambda_y_: is_T_COLOR_1 y
~ exist filter ALL_BOXES lambda_x_: exist filter get_above filter x lambda_y_: is_T_COLOR_2 y lambda_z_: is_T_COLOR_1 z
~ exist filter get_below filter ALL_ITEMS lambda_x_: is_T_COLOR_1 x lambda_y_: is_T_COLOR_2 y


@ there is a T_COLOR tower $   18
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: equal Color.T_COLOR query_color x
~ exist filter ALL_BOXES lambda_x_: equal Color.T_COLOR query_color x

@ there is a box with T_QUANTITY_COMPARE T_INT item $   18
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x

@ there are T_QUANTITY_COMPARE T_INT tower with a T_COLOR item at the T_LOC $   18
~ T_QUANTITY_COMPARE T_INT count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ T_QUANTITY_COMPARE T_INT count filter ALL_BOXES lambda_x_: exist filter filter x lambda_y_: is_T_LOC y lambda_z_: is_T_COLOR z
~ T_QUANTITY_COMPARE T_INT count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR y is_T_LOC y

@ there is a box with T_INT T_COLOR item  $  18
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y

@ there are T_INT T_COLOR item as the T_LOC of a tower  $  18
~ equal_int T_INT count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_LOC x


@ there is T_ONE tower with T_INT T_COLOR item stack together  $  17
~ equal_int 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter get_touching filter x lambda_y_: is_T_COLOR y lambda_z_: is_T_COLOR z
~ le 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter get_touching filter x lambda_y_: is_T_COLOR y lambda_z_: is_T_COLOR z


@ the tower with T_INT item have a T_COLOR item at the T_LOC  $  16
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x exist filter x lambda_y_: AND is_T_LOC y is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x equal Color.T_COLOR query_color filter x lambda_y_: is_T_LOC y
~ exist filter filter ALL_BOXES lambda_x_: equal_int T_INT count x lambda_y_: equal Color.T_COLOR query_color filter y lambda_z_: is_T_LOC z

@ there is a T_COLOR T_SHAPE touch the edge  $  16
~ exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY
~ exist filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.ANY

@ there is T_ONE tower with T_INT T_COLOR item  $  16
~ equal_int 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y
~ le 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y

@ there is T_ONE tower with T_ONE T_COLOR item at the T_LOC  $  16
~ exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
~ equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_T_COLOR y is_T_LOC y
~ exist filter ALL_BOXES lambda_x_: equal_int 1 count filter filter x lambda_y_: is_T_COLOR y lambda_z_: is_T_LOC z

@ there are T_QUANTITY_COMPARE T_INT T_COLOR item touch the edge  $  15
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_touching_wall y Side.ANY

@ there is a T_COLOR item closely touch the T_LOC of a box  $  14
~ exist filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_touching_wall y Side.T_LOC
~ exist filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_touching_wall x Side.T_LOC

@ there is T_ONE box with T_INT T_COLOR item $   14
~ equal_int 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y

~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: is_T_COLOR y

@ there is a box with a T_COLOR_1 T_SHAPE_1 and T_QUANTITY_COMPARE T_ONE T_COLOR_2 T_SHAPE_2  $  14
~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y T_QUANTITY_COMPARE 1 count filter x lambda_z_: AND is_T_COLOR_2 z is_T_SHAPE_2 z
~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y T_QUANTITY_COMPARE 1 count filter x lambda_z_: AND is_T_COLOR_2 z is_T_SHAPE_2 z

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR_1 item on a T_COLOR_2 item  $  13
~ T_QUANTITY_COMPARE 1 count filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_2 x lambda_y_: is_T_COLOR_1 y
~ T_QUANTITY_COMPARE 1 count filter get_below filter ALL_ITEMS lambda_x_: is_T_COLOR_1 x lambda_y_: is_T_COLOR_2 y

@ there is a tower with T_QUANTITY_COMPARE T_INT item  $  13
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x

@ there is no T_COLOR T_SHAPE closely touch the T_LOC of a box  $  12
~ NOT exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC
~ NOT exist filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.T_LOC

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR item touch the edge  $  12
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_touching_wall y Side.ANY

@ there is a T_SHAPE closely touch right edge of a box  $  11
~ exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_touching_wall y Side.RIGHT
~ exist filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x is_touching_wall x Side.RIGHT

@ there is a T_SHAPE closely touch the T_LOC of a box  $  11
~ exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_touching_wall y Side.T_LOC
~ exist filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x is_touching_wall x Side.T_LOC

@ there is T_ONE tower with a T_COLOR_1 item on a T_COLOR_2 item  $  11
~ exist filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_2 x lambda_y_: is_T_COLOR_1 y
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter get_above filter x lambda_y_: is_T_COLOR_2 y lambda_z_: is_T_COLOR_1 z
~ exist filter get_below filter ALL_ITEMS lambda_x_: is_T_COLOR_1 x lambda_y_: is_T_COLOR_2 y

@ there is T_ONE box with only T_COLOR_1 and T_COLOR_2 item  $  11
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y
~ equal_int 1 count filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y

@ there is a box with only T_INT item  $  11
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x


@ there is T_ONE tower with T_QUANTITY_COMPARE T_INT T_COLOR item  $  11
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count filter x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count filter x lambda_y_: is_T_COLOR y

there is a T_COLOR_1 item T_COLOR_2 a T_COLOR_3 item  $  10

@ there is T_QUANTITY_COMPARE T_ONE tower with T_QUANTITY_COMPARE T_INT item  $  10
~ T_QUANTITY_COMPARE 1 count filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count x

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR item closely touch the T_LOC of a box $   10
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_touching_wall x Side.T_LOC
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_touching_wall y Side.T_LOC

@ there is no T_COLOR T_SHAPE closely touch right edge of a box  $  10
~ NOT exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.RIGHT
~ NOT exist filter filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_T_SHAPE y lambda_z_: is_touching_wall z Side.RIGHT

@ there is T_ONE T_COLOR item  $  10
~ equal_int 1 count filter ALL_ITEMS lambda_x_: is_T_COLOR x
~ exist filter ALL_ITEMS lambda_x_: is_T_COLOR x
~ exist filter ALL_ITEMS lambda_x_: is_T_COLOR x

@ there is a T_COLOR T_SHAPE touch the side $ 9
~ exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY
~ exist filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.ANY
~ exist filter filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_T_SHAPE y lambda_z_: is_touching_wall z Side.ANY

@ there is T_ONE box with many item $ 9
~ exist filter ALL_BOXES lambda_x_: ge 3 count x
~ exist filter ALL_BOXES lambda_x_: ge 4 count x

@ there are T_QUANTITY_COMPARE T_INT T_SHAPE not touch a edge $ 9
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: NOT is_touching_wall y Side.ANY

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR T_SHAPE touch the T_LOC $ 9
~ T_QUANTITY_COMPARE T_ONE count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.T_LOC
~ T_QUANTITY_COMPARE T_ONE count filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: is_touching_wall y Side.T_LOC
~ T_QUANTITY_COMPARE T_ONE count filter filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_T_SHAPE y lambda_z_: is_touching_wall z Side.T_LOC

@ there is a box with T_QUANTITY_COMPARE T_INT T_COLOR item $ 9
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count filter x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_INT count filter x lambda_y_: is_T_COLOR y

@ there is a tower with T_INT item $ 9
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x


@ there are T_QUANTITY_COMPARE T_INT T_SHAPE touch the edge $ 9
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_touching_wall y Side.ANY

@ there is a box with a T_COLOR_1 T_SHAPE_1 and T_INT T_COLOR_2 T_SHAPE_2 $ 8
~ exist filter filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y lambda_z_: ge T_INT count filter z lambda_w_: AND is_T_COLOR_2 w is_T_SHAPE_2 w
~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE_1 y ge T_INT count filter x lambda_z_: AND is_T_COLOR_2 z is_T_SHAPE_2 z

@ each box have T_QUANTITY_COMPARE T_ONE T_COLOR item $ 8
~ All ALL_BOXES lambda_x_: T_QUANTITY_COMPARE 1 count filter x lambda_y_: is_T_COLOR y

@ there is a T_SHAPE closely touch a corner  $ 8
~ exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_touching_corner y Side.ANY
~ exist filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x is_touching_corner x Side.ANY

@ there are T_QUANTITY_COMPARE T_INT T_COLOR item $ 8
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: is_T_COLOR x

@ there is a tower with only T_ONE T_COLOR item  $ 8
~ exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: is_T_COLOR y


@ there are T_QUANTITY_COMPARE T_INT T_COLOR item not touch a edge $ 8
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: NOT is_touching_wall y Side.ANY

@ there is no T_COLOR item as the T_LOC of a tower $ 8
~ NOT exist filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_T_LOC y
~ NOT exist filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_LOC x

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR T_SHAPE closely touch the T_LOC of a box $  8
~ T_QUANTITY_COMPARE T_ONE count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_ONE count filter filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: is_touching_wall y Side.ANY lambda_z_: is_T_SHAPE z

#@ there is a box with T_INT_1 item of T_INT_2 different color $ 8
#~ exist filter ALL_BOXES lambda_x_: exist filter select T_INT_1 x lambda_y_: equal_int T_INT_2 count query_color y


@ there are T_QUANTITY_COMPARE T_INT T_COLOR item not touch the edge $ 8
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND is_T_COLOR x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter ALL_ITEMS lambda_x_: is_T_COLOR x lambda_y_: NOT is_touching_wall y Side.ANY

@ there is T_QUANTITY_COMPARE T_ONE T_COLOR T_SHAPE not touch the edge $ 7
~ T_QUANTITY_COMPARE 1 count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE 1 count filter filter ALL_ITEMS lambda_x_: AND is_T_COLOR x is_T_SHAPE x lambda_y_: NOT is_touching_wall y Side.ANY

@ there is T_QUANTITY_COMPARE_1 T_ONE T_COLOR item as the T_LOC of a tower with T_QUANTITY_COMPARE_2 T_INT item $ 7
~ T_QUANTITY_COMPARE_1 1 count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_LOC x T_QUANTITY_COMPARE_2 T_INT count get_box_inclusive x
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE_2 T_INT count x T_QUANTITY_COMPARE_1 1 count filter x lambda_y_: AND is_T_COLOR y is_T_LOC y

@ there is no T_SHAPE closely touch the T_LOC of a box $  7
~ NOT exist filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_touching_wall y Side.T_LOC
~ NOT exist filter ALL_ITEMS lambda_x_: AND is_T_SHAPE x is_touching_wall x Side.T_LOC

@ there are T_QUANTITY_COMPARE T_INT T_COLOR T_SHAPE not touch a edge $ 7
~ T_QUANTITY_COMPARE T_INT count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x NOT is_touching_wall x Side.ANY
~ T_QUANTITY_COMPARE T_INT count filter filter filter ALL_ITEMS lambda_x_: is_T_SHAPE x lambda_y_: is_T_COLOR y lambda_z_: NOT is_touching_wall z Side.ANY

@ there is no T_COLOR_1 item on a T_COLOR_2 item  $ 7
~ NOT exist filter get_above filter ALL_ITEMS lambda_x_: is_T_COLOR_2 x lambda_y_: is_T_COLOR_1 y
~ NOT exist filter get_below filter ALL_ITEMS lambda_x_: is_T_COLOR_1 x lambda_y_: is_T_COLOR_2 y

@ there is a box which have T_INT item $ 7
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x


#@ there is a box with a T_COLOR_1 T_SHAPE_1 a T_COLOR_2 T_SHAPE _2and a T_COLOR_3 T_SHAPE_3 $  7
#~ exist filter ALL_BOXES lambda_x_: AND AND exist filter x AND is_T_COLOR_1 x is_T_SHAPE_1 x exist filter x AND is_T_COLOR_2 x is_T_SHAPE_2 x exist filter x AND is_T_COLOR_3 x is_T_SHAPE_3 x


@ there is a box with T_INT_1 item of which T_INT_2 are T_COLOR $  7
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT_1 count x equal_int T_INT_2 count filter x lambda_y_: is_T_COLOR y

@ there is a tower with only T_ONE item $ 6
~ exist filter ALL_BOXES lambda_x_: equal_int 1 count x


there is T_QUANTITY_COMPARE T_ONE tower with a T_COLOR item on a T_COLOR item $ 6
there is a box with a T_COLOR T_SHAPE and T_INT T_SHAPE 6

@ none of the T_COLOR T_SHAPE are touch the edge $ 6
~ NOT exist filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY
#~ equal_int 0 count filter ALL_ITEMS lambda_x_: AND AND is_T_COLOR x is_T_SHAPE x is_touching_wall x Side.ANY

@ there is a box with only T_COLOR item $ 6
~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: is_T_COLOR y
~ exist filter ALL_BOXES lambda_x_: equal Color.T_COLOR query_color x


@ there is a box with T_INT item of T_COLOR_1 and T_COLOR_2 color $ 5
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count filter x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y


@ there is a box with T_INT item of only T_COLOR_1 and T_COLOR_2 color $ 5
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y

@ there is only T_ONE T_COLOR item as the T_LOC of a tower $ 5

~ equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_T_LOC x is_T_COLOR x

@ there is a box with item of only T_COLOR_1 and T_COLOR_2 color $ 5

~ exist filter ALL_BOXES lambda_x_: All x lambda_y_: OR is_T_COLOR_1 y is_T_COLOR_2 y

@ there is T_ONE tower with T_QUANTITY_COMPARE T_INT T_COLOR item stack together $ 5
~ equal_int 1 count filter ALL_BOXES lambda_x_: equal_int T_INT count filter get_touching filter x lambda_y_: is_T_COLOR y lambda_z_: is_T_COLOR z


@ there is a box with a T_COLOR_1 T_SHAPE and T_INT T_COLOR_2 item $ 5
~  exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_T_COLOR_1 y is_T_SHAPE y equal_int T_INT count filter x lambda_z_: is_T_COLOR_2 z 


@ there is a box that have T_INT item $ 5
~ exist filter ALL_BOXES lambda_x_: equal_int T_INT count x


@ there is T_QUANTITY_COMPARE T_ONE T_COLOR item in each box $ 5
~ All ALL_BOXES lambda_x_: T_QUANTITY_COMPARE T_ONE count filter x lambda_y_: is_T_COLOR y

@ there is a tower with item of 3 different color $ 1
~ exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color x

@ there is a box with T_SHAPE of 3 different color $ 1

~ exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color filter x lambda_y_: is_T_SHAPE y

@ there is a tower with item of 2 different color $ 1

~ exist filter ALL_BOXES lambda_x_: equal_int 2 count query_color x

@ there is a box with item of 2 different color $ 1

~ exist filter ALL_BOXES lambda_x_: equal_int 2 count query_color x

@ there is a tower with item of 2 different shape $ 1

~ exist filter ALL_BOXES lambda_x_: equal_int 2 count query_shape x 

@ there is a tower with item of 3 different shape $ 1
~ exist filter ALL_BOXES lambda_x_: equal_int 3 count query_shape x

@ there is a box with T_QUANTITY_COMPARE_1 T_ONE T_SHAPE_1 and T_QUANTITY_COMPARE_2 T_INT T_SHAPE_2  $ 5
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE_1 T_ONE count filter x lambda_y_: is_T_SHAPE_1 y T_QUANTITY_COMPARE_2 T_INT count filter x lambda_z_: is_T_SHAPE_2 z

@ there is a box with T_QUANTITY_COMPARE_1 T_INT_1 T_SHAPE_1 and T_QUANTITY_COMPARE_2 T_INT_2 T_SHAPE_2 $ 5
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE_1 T_INT_1 count filter x lambda_y_: is_T_SHAPE_1 y T_QUANTITY_COMPARE_2 T_INT_2 count filter x lambda_z_: is_T_SHAPE_2 z

@ there is a box with T_QUANTITY_COMPARE_1 T_INT_1 T_COLOR_1 item and T_QUANTITY_COMPARE_2 T_INT_2 T_COLOR_2 item $ 5
~ exist filter ALL_BOXES lambda_x_: AND T_QUANTITY_COMPARE_1 T_INT_1 count filter x lambda_y_: is_T_COLOR_1 y T_QUANTITY_COMPARE_2 T_INT_2 count filter x lambda_z_: is_T_COLOR_2 z

@ T_ONE tower have T_INT item of the same color $ 2
~	equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT x lambda_y_: all_same query_color y

$ there is a box with T_INT item of the same shape $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT x lambda_y_: all_same query_shape y

@ there is T_ONE tower with T_QUANTITY_COMPARE T_INT item of same color $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT x lambda_y_: all_same query_color y

$ there is a box with T_INT circle of the same color $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_circle y lambda_z_: all_same query_color z

$ there is a box with T_INT triangle of the same color $ 1
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_triangle y lambda_z_: all_same query_color z

$ there is a box with T_INT triangle of different color $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_triangle y lambda_z_: NOT all_same query_color z

$ there is a box with T_INT blue item of the same shape $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_blue y lambda_z_: all_same query_shape z

$ there is a box with at least T_INT black item of the same shape $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_black y lambda_z_: all_same query_shape z

$ there is a box with at least T_INT yellow item of the same shape $ 2
~ equal_int 1 count filter ALL_BOXES lambda_x_: exist filter select T_INT filter x lambda_y_: is_yellow y lambda_z_: all_same query_shape z

@ there is a T_INT item tower where the T_LOC_1 and T_LOC_2 item are the same in color  $ 1
~ exist filter ALL_BOXES lambda_x_: AND equal_int T_INT count x equal query_color filter x lambda_y_: is_T_LOC_1 y query_color filter x lambda_z_: is_T_LOC_2 z 


@ there are 2 T_COLOR item touch each other $ 2

~ le 2 count  filter ALL_ITEMS  lambda_x_:  AND is_T_COLOR x   exist filter get_touching x   lambda_y_:  is_T_COLOR y 
	
@ there are 2 T_COLOR item touch each other $ 2

~ le 2 count filter ALL_ITEMS  lambda_x_:  AND is_T_COLOR x   exist filter get_touching x   lambda_y_:  is_T_COLOR y 

@ there is a box with 2 T_COLOR item touch each other $ 2

~ exist filter ALL_BOXES lambda_x_: le 2 count  filter x  lambda_y_:  AND is_T_COLOR y   exist filter get_touching y   lambda_z_:  is_T_COLOR z 

@ there is a box with a T_COLOR item and 2 T_COLOR_1 item touch each other $ 2

~ exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: is_T_COLOR y le 2 count filter x  lambda_z_:  AND is_T_COLOR z   exist filter get_touching z   lambda_w_:  is_T_COLOR w 

	

@ at least one of the tower with T_INT item have same color item at the T_LOC_1 and T_LOC_2 $ 2

~ le 1  count filter filter ALL_BOXES  lambda_x_:  equal_int T_INT  count x     lambda_y_:   all_same query_color filter y  lambda_z_:     OR is_T_LOC_1 z   is_T_LOC_2 z        
~ le 1  count filter filter ALL_BOXES  lambda_x_:  equal_int T_INT  count x     lambda_y_:   equal query_color filter y  lambda_z_:     is_T_LOC_1 z     query_color filter y  lambda_w_:    is_T_LOC_2 w       

@ there is a box with a T_COLOR_1 item and only T_COLOR_2 item on top of it $ 5

~ exist filter ALL_BOXES  lambda_x_:  exist filter x  lambda_y_:   AND is_T_COLOR_1 y   All get_above y   lambda_z_:     is_T_COLOR_2 z


@ there is a box with T_QUANTITY_COMPARE T_INT item of which T_ONE is a T_SHAPE $ 10

~ exist filter ALL_BOXES  lambda_x_:  AND T_QUANTITY_COMPARE T_INT  count x     equal_int T_ONE  count filter x  lambda_y_:  is_T_SHAPE y 


@ there is a T_INT item tower where the T_LOC_1 and T_LOC_2 item are the same in color $ 5

~ exist filter filter ALL_BOXES  lambda_x_:  equal_int T_INT  count x     lambda_y_:   all_same query_color filter y  lambda_z_:     OR is_T_LOC_1 z   is_T_LOC_2 z        
~ exist filter filter ALL_BOXES  lambda_x_:  equal_int T_INT  count x     lambda_y_:   equal query_color filter y  lambda_z_:     is_T_LOC_1 z     query_color filter y  lambda_w_:    is_T_LOC_2 w       


@ there is a box with T_INT_1 item and T_INT_2 T_COLOR item of the same shape $ 6

~ exist filter ALL_BOXES  lambda_x_:   AND equal_int T_INT_1 count x exist filter select T_INT_2 x lambda_y_: all_same query_shape y
